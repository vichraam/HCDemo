{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/employee-info/employee-info.component.ts","./src/app/employee-info/employee-info.component.html","./src/app/employee-search/employee-list/employee-list.component.ts","./src/app/employee-search/employee-list/employee-list.component.html","./src/app/employee-search/employee-search.component.ts","./src/app/employee-search/employee-search.component.html","./src/app/employee.service.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/pipe/employee-filter.pipe.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,sBAAsB,CAAC;KAEhC;;wEAHY,YAAY;4FAAZ,YAAY;QCPzB,wEAAyB;QACzB,yEACE;QAAA,2EAA+B;QAGjC,4DAAM;;6FDEO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACI;AACW;AACD;AAER;AACa;AAC0B;AACU;AAC/B;AACe;AAC1B;AAEyB;AACrC;;;;AAG1C,MAAM,SAAS,GAAW;IACxB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mEAAa,EAAC;IACpC,EAAC,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,kGAAuB,EAAC;IAC5D,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,6FAAqB,EAAC;IACxD,EAAC,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,6FAAqB,EAAC;CAC7D,CAAC;AAwBK,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAJT,EAAE,YARJ;YACP,uEAAa;YACb,0DAAW;YACX,qEAAgB;YAChB,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;YAC/B,6FAAuB;YACvB,wDAAY,CAAC,OAAO,EAAE;SACvB;mIAKU,SAAS,mBApBlB,2DAAY;QACZ,wEAAe;QACf,kGAAuB;QACvB,4GAAqB;QACrB,6EAAkB;QAClB,6FAAqB;QACrB,mEAAa,aAGb,uEAAa;QACb,0DAAW;QACX,qEAAgB,EAAE,8DAElB,6FAAuB;6FAOd,SAAS;cAtBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,wEAAe;oBACf,kGAAuB;oBACvB,4GAAqB;oBACrB,6EAAkB;oBAClB,6FAAqB;oBACrB,mEAAa;iBACd;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,0DAAW;oBACX,qEAAgB;oBAChB,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;oBAC/B,6FAAuB;oBACvB,wDAAY,CAAC,OAAO,EAAE;iBACvB;gBACD,SAAS,EAAE,EAAE;gBACb,4FAA4F;gBAC5F,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC9CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuE;;;;;;;;;IC4BrC,2EAAuE;IAAA,6EAAkB;IAAA,4DAAO;;;IAO9F,2EAA6E;IAAA,iFAAsB;IAAA,4DAAO;;;IAU5G,2EAAqE;IAAA,4EAAiB;IAAA,4DAAO;;;IAe7F,2EAA2D;IAAA,sEAAW;IAAA,4DAAO;;;IAO3E,2EAA6D;IAAA,uEAAY;IAAA,4DAAO;;;IAkB5E,2EAA+D;IAAA,wEAAa;IAAA,4DAAO;;;IAUnF,2EAAmE;IAAA,0EAAe;IAAA,4DAAO;;ADlF1H,MAAM,qBAAqB;IAmBhC,YAAoB,eAAgC,EAAU,KAAqB,EAAU,MAAe,EAAW,MAAqB;QAAxH,oBAAe,GAAf,eAAe,CAAiB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAS;QAAW,WAAM,GAAN,MAAM,CAAe;QAf5I,aAAQ,GACR;YACI,YAAY,EAAG,EAAE;YACjB,YAAY,EAAG,EAAE;YACjB,GAAG,EAAG,CAAC;YACP,IAAI,EAAG,EAAE;YACT,SAAS,EAAG,EAAE;YACd,SAAS,EAAG,EAAE;YACd,QAAQ,EAAG,EAAE;YACb,KAAK,EAAG,EAAE;YACV,OAAO,EAAG,EAAE;YACZ,EAAE,EAAE,CAAC;YACL,WAAW,EAAE,EAAE;SAChB,CAAC;IAE4I,CAAC;IAEjJ,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC3C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAExC,IAAG,IAAI,CAAC,EAAE,IAAI,IAAI,EAAC;YACjB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC;iBACxC,SAAS,CACN,QAAQ,CAAC,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;oBACzB,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;oBACxC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;oBACxC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG;oBACtB,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;oBACxB,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS;oBAClC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS;oBAClC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ;oBAChC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;oBAC1B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;oBAC9B,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;oBACpB,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW;iBACvC,CAAC,CAAC;YACL,CAAC,CACJ,CAAC;YACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC5B;IACH,CAAC;IAED,cAAc,CAAC,KAAK;QAClB,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAErC,IAAG,IAAI,CAAC,kBAAkB,EAAC;YACzB,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAChC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnD,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAE,CAAC;YACpD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,4CAA4C,CAAC,CAAC;SACnE;IACH,CAAC;IAED,kBAAkB,CAAC,CAAC;QAClB,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,wBAAwB,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC/E,CAAC;IAED,YAAY,CAAC,IAAY;QACvB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE/B,IAAI,CAAC,QAAQ,GAAG;YACd,YAAY,EAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,YAAY;YACnD,YAAY,EAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,YAAY;YACnD,GAAG,EAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG;YACjC,IAAI,EAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI;YACnC,SAAS,EAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS;YAC7C,SAAS,EAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS;YAC7C,QAAQ,EAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ;YAC3C,KAAK,EAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK;YACrC,OAAO,EAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO;YACzC,EAAE,EAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;YAC/B,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW;SACvC,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,EAAC;YACxB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACnD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,sCAAsC,CAAC,CAAC;SAC7D;aACG;YACF,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACnD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,8CAA8C,CAAC,CAAC;SACrE;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YAClD,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;;0FAxGU,qBAAqB;qGAArB,qBAAqB;;;;;;;QCblC,yEACI;QAAA,yEACI;QAAA,wEAAwB;QAAA,wEAAa;QAAA,4DAAK;QAC9C,4DAAM;QACN,yEACI;QAAA,6EACI;QADE,8RAAY,qBAAqB,IAAC;QACpC,2EACA;QAD2E,8LAA0B;QAArG,4DACA;QAAA,2EACA;QAD+E,uMAAmC;QAAlH,4DACA;QAAA,8EACA;QADuE,oJAAU,0BAAsB,IAAC;QAAxG,4DACA;QAAA,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,2EAKA;QAHI,yRAAS,WAAiB,IAAC;QAF/B,4DAKA;QAAA,2EACI;QAAA,yEAAsE;QAAA,wFAA4B;QAAA,4DAAI;QAC1G,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,iEACA;QAAA,2EACI;QAAA,2EACI;QAAA,6EAA2D;QAAA,wEAAY;QAAA,4DAAQ;QAC/E,2EACE;QAAA,4EACA;QAAA,sHAAuE;QACzE,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,6EAA0D;QAAA,uEAAW;QAAA,4DAAQ;QAC7E,2EACI;QAAA,4EACA;QAAA,sHAA6E;QACjF,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,iEACA;QAAA,2EACI;QAAA,2EACI;QAAA,6EAA0D;QAAA,uEAAW;QAAA,4DAAQ;QAC7E,2EACE;QAAA,4EACA;QAAA,sHAAqE;QACvE,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,6EAA0D;QAAA,qEAAS;QAAA,4DAAQ;QAC3E,2EACI;QAAA,wEACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QAAA,iEACN;QAAA,2EACI;QAAA,2EACI;QAAA,6EAAoD;QAAA,iEAAK;QAAA,4DAAQ;QACjE,2EACE;QAAA,4EACA;QAAA,sHAA2D;QAC7D,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,6EAAsD;QAAA,kEAAM;QAAA,4DAAQ;QACpE,2EACI;QAAA,4EACA;QAAA,sHAA6D;QACjE,4DAAM;QACV,4DAAM;QACV,4DAAM;QAAA,iEACN;QAAA,2EACI;QAAA,2EACI;QAAA,6EAA2D;QAAA,qEAAS;QAAA,4DAAQ;QAC5E,2EACI;QAAA,2EAA6G;QACjH,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,6EAAuD;QAAA,mEAAO;QAAA,4DAAQ;QACtE,2EACA;QAAA,4EACA;QAAA,sHAA+D;QACnE,4DAAM;QACV,4DAAM;QACV,4DAAM;QACF,iEACA;QAAA,2EACI;QAAA,2EACI;QAAA,6EAA8D;QAAA,qEAAS;QAAA,4DAAQ;QAC/E,2EACA;QAAA,4EACA;QAAA,sHAAmE;QACnE,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAAA,iEACN;QAAA,2EACI;QAAA,sEAA4B;QAC5B,2EACI;QAAA,sEAA4B;QAC5B,2EACI;QAAA,8EAA+F;QAAA,kEAAM;QAAA,4DAAS;QAC9G,2EAAsB;QAAA,8EAAkB;QAAA,4DAAM;QAC9C,+EAAkG;QAAA,iEAAI;QAAA,4DAAS;QACnH,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;;;;;;;;;;QA/GiF,0DAA0B;QAA1B,oFAA0B;QACtB,0DAAmC;QAAnC,6FAAmC;QAMlG,0DAA8B;QAA9B,iKAA8B;QAeC,2DAA6C;QAA7C,2FAA6C;QAO3C,0DAAmD;QAAnD,2FAAmD;QAUrD,0DAA2C;QAA3C,2FAA2C;QAe3C,2DAAiC;QAAjC,2FAAiC;QAO/B,0DAAmC;QAAnC,6FAAmC;QAkB/B,2DAAqC;QAArC,6FAAqC;QAUrC,0DAAyC;QAAzC,6FAAyC;QAaD,2DAA2B;QAA3B,gFAA2B;;6FD/FvH,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;kBAGE,uDAAS;mBAAC,SAAS,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;;;;;;;;;;;;;AEftC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;;;ICCrD,yEACE;IAAA,yEACE;IAAA,yEACE;IAAA,yEACE;IAAA,yEACF;IAD0D,qWAA8B;IAAtF,4DACF;IAAA,4DAAM;IACR,4DAAM;IACN,yEACE;IAAA,yEACE;IAAA,yEAA+B;IAAA,+DAAI;IAAA,4DAAM;IACzC,0EAAsB;IAAA,wDAA6C;IAAA,4DAAM;IAC3E,4DAAM;IACN,0EACE;IAAA,0EAA+B;IAAA,iEAAK;IAAA,4DAAM;IAC1C,2EAAsB;IAAA,wDAAiB;IAAA,4DAAM;IAC/C,4DAAM;IACN,0EACE;IAAA,0EAA+B;IAAA,sEAAU;IAAA,4DAAM;IAC/C,2EAAsB;IAAA,wDAAsB;IAAA,4DAAM;IACpD,4DAAM;IAER,4DAAM;IACN,2EACE;IAAA,0EACE;IAAA,0EAA+B;IAAA,sEAAU;IAAA,4DAAM;IAC/C,0EAAsB;IAAA,wDAAyB;IAAA,4DAAM;IACrD,2EAA+B;IAAA,mEAAO;IAAA,4DAAM;IAC5C,2EAAsB;IAAA,wDAAkB;IAAA,4DAAM;IAChD,4DAAM;IAEN,0EACE;IAAA,0EAA+B;IAAA,sEAAU;IAAA,4DAAM;IAC/C,0EAAsB;IAAA,wDAAyB;IAAA,4DAAM;IACrD,2EAA+B;IAAA,iEAAK;IAAA,4DAAM;IAC1C,2EAAsB;IAAA,wDAAoB;IAAA,4DAAM;IAClD,4DAAM;IACN,0EACE;IAAA,0EAA+B;IAAA,kEAAM;IAAA,4DAAM;IAC3C,0EAAsB;IAAA,wDAAiB;IAAA,4DAAM;IAC/C,4DAAM;IAER,4DAAM;IAEN,2EACI;IAAA,2EACI;IAAA,8EAA6E;IAA/B,yWAA8B;IAAC,gEAAI;IAAA,4DAAS;IAC1F,gFACA;IAAA,8EAA6E;IAAhC,0WAA+B;IAAC,kEAAM;IAAA,4DAAS;IAChG,4DAAM;IACV,4DAAM;IAER,4DAAM;IAER,4DAAM;;;IAjD0B,0DAA8B;IAA9B,gKAA8B;IAMhC,0DAA6C;IAA7C,2HAA6C;IAI7C,0DAAiB;IAAjB,0FAAiB;IAIjB,0DAAsB;IAAtB,sFAAsB;IAOtB,0DAAyB;IAAzB,yFAAyB;IAEzB,0DAAkB;IAAlB,kFAAkB;IAKlB,0DAAyB;IAAzB,yFAAyB;IAEzB,0DAAoB;IAApB,oFAAoB;IAIpB,0DAAiB;IAAjB,iFAAiB;;AD1B5C,MAAM,qBAAqB;IAKhC,YAAoB,eAAgC,EAAU,MAAc,EAAU,MAAqB;QAAvF,oBAAe,GAAf,eAAe,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAEhH,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE;aACrC,SAAS,CACN,QAAQ,CAAC,EAAE,GAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CACnE,CAAC;QACF,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,OAAO,CAAC,EAAU;QAChB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,EAAE,EAAE,CAAC,QAAQ,EAAE,CAAE,CAAC,CAAC;IAC1D,CAAC;IAED,QAAQ,CAAC,EAAU;QACjB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAChB,IAAG,OAAO,CAAC,uCAAuC,CAAC,EACnD;YACE,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CAC/C,QAAQ,CAAC,EAAE;gBAET,OAAO,CAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACvB,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC1B,CAAC,CACF,CAAC;YAEF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;SAC1D;IACH,CAAC;IAED,gBAAgB;QAEd,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YACxB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7B,IAAG,CAAC,CAAC,WAAW,EAAE,KAAK,MAAM,EAAC;oBAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAG,CAAC;iBACpF;qBACI,IAAG,CAAC,CAAC,WAAW,EAAE,KAAK,KAAK,EAAC;oBAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAG,CAAC;iBAC1E;qBACI,IAAG,CAAC,CAAC,WAAW,EAAE,KAAK,MAAM,EAAC;oBACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAG,CAAC;iBAC5E;qBACI,IAAG,CAAC,CAAC,WAAW,EAAE,KAAK,OAAO,EAAC;oBAClC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAG,CAAC;iBAC9E;qBACG;oBACF,aAAa;iBACd;aACF;QACF,CAAC,CAAC,CAAC;IACN,CAAC;;0FA7DU,qBAAqB;qGAArB,qBAAqB;QCblC,yEACI;QAAA,mHACE;;QAqDJ,4DAAM;;QAtDoB,0DAAkE;QAAlE,yKAAkE;;6FDYjF,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;kBAEE,mDAAK;;kBACL,mDAAK;;;;;;;;;;;;;;AEfR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACnB;;;;AAOxB,MAAM,uBAAuB;IAGlC;QADA,WAAM,GAAoB,IAAI,4CAAO,EAAE,CAAC;IACxB,CAAC;IAEjB,QAAQ;IACR,CAAC;IACD,mBAAmB,CAAC,KAAU;QAC5B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC;;8FATU,uBAAuB;uGAAvB,uBAAuB;QCRpC,yEACI;QAAA,yEACI;QAAA,wEAAwB;QAAA,0EAAe;QAAA,4DAAK;QAChD,4DAAM;QACN,yEACI;QAAA,0EACI;QAAA,yEACI;QAAA,2EAAwB;QAAA,yEAAc;QAAA,4DAAQ;QAAC,+EAC/C;QAAA,4EACJ;QADiF,sMAA8B;QAA3G,4DACJ;QAAA,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACN,iEAEA;QAAA,0EACI;QAAA,0EACI;QAAA,2EACI;QAAA,0EACI;QAAA,4EAAwB;QAAA,mEAAO;QAAA,4DAAQ;QAAC,gFACxC;QAAA,8EACI;QAD2C,wJAAU,+BAA2B,IAAC;QACjF,qEAAiB;QACjB,0EAAQ;QAAA,gEAAI;QAAA,4DAAS;QACrB,0EAAQ;QAAA,+DAAG;QAAA,4DAAS;QACpB,0EAAQ;QAAA,iEAAK;QAAA,4DAAS;QACtB,0EAAQ;QAAA,gEAAI;QAAA,4DAAS;QACzB,4DAAS;QACb,4DAAM;QACV,4DAAO;QACX,4DAAM;QACN,0EACI;QAAA,oFAA+F;QACnG,4DAAM;QACV,4DAAM;;QAzBuF,2DAA8B;QAA9B,yFAA8B;QAuBhG,2DAAqC;QAArC,kGAAqC;;6FDvBnD,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAqD;AAGK;;;AAGnD,MAAM,eAAe;IAKxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJpC,eAAU,GAAY,qEAAW,CAAC,kBAAkB,CAAE;IAIf,CAAC;IAExC,eAAe;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,UAAU,CAAC,CAAC;IACtD,CAAC;IAED,WAAW,CAAC,EAAU;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAEhB,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,EAAE,CAAC,QAAQ,EAAE,CACxC,CAAC;IACN,CAAC;IAED,cAAc,CAAC,QAAkB;QAC7B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,IAAI,CACV,IAAI,CAAC,UAAU,EACf,QAAQ,CACX;aACA,SAAS,CACN,QAAQ,CAAC,EAAE,GAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CACxC,CAAC;IACN,CAAC;IAED,cAAc,CAAC,QAAkB;QAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,GAAG,CACT,IAAI,CAAC,UAAU,EACf,QAAQ,CACX;aACA,SAAS,CACN,QAAQ,CAAC,EAAE,GAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CACxC,CAAC;IACN,CAAC;IAED,cAAc,CAAC,EAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;IACnE,CAAC;;8EA5CQ,eAAe;kGAAf,eAAe,WAAf,eAAe,mBADH,MAAM;6FAClB,eAAe;cAD3B,wDAAU;eAAC,EAAC,UAAU,EAAE,MAAM,EAAC;;;;;;;;;;;;;;ACLhC;AAAA;AAAA;AAAA;AAAwE;;;;AAOjE,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,uEAAuC;QAAA,+EAAoB;QAAA,4DAAI;QACnE,4DAAM;QAEN,yEACI;QAAA,wEACI;QAAA,wEAA8B;QAAA,uEAAiC;QAAA,0EAAe;QAAA,4DAAI;QAAA,4DAAK;QACvF,yEAA8B;QAAA,wEAA8B;QAAA,wEAAY;QAAA,4DAAI;QAAA,4DAAK;QACrF,4DAAK;QACT,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAXuD,0DAAyC;QAAzC,0JAAyC;;6FDKzF,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAkD;;AAO3C,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,yEACI;QAAA,yEACI;QAAA,wEAAwB;QAAA,6EAAkB;QAAA,4DAAK;QACnD,4DAAM;QACN,yEACI;QAAA,qEAAI;QAAA,mIAAwE;QAAA,4DAAK;QACjF,gEACA;QAAA,wEAA6C;QAAA,oEAAG;QAAA,wEAAY;QAAA,4DAAI;QAAA,4DAAK;QACrE,iEACA;QAAA,yEACI;QAAA,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QAClB,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QAEnB,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,sEAAI;QAAA,gHAAoD;QAAA,4DAAK;QAE7D,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,sEAAI;QAAA,8FAAkC;QAAA,4DAAK;QAE3C,sEAAI;QAAA,4EAAgB;QAAA,4DAAK;QACzB,sEAAI;QAAA,8EAAkB;QAAA,4DAAK;QAC/B,4DAAK;QACL,iEACA;QAAA,yEAA6C;QAAA,qEAAG;QAAA,oEAAQ;QAAA,4DAAI;QAAA,4DAAK;QACjE,iEACA;QAAA,yEACI;QAAA,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,sEAAI;QAAA,sEAAU;QAAA,qEAAG;QAAA,8DAAE;QAAA,4DAAI;QAAA,4DAAK;QAE5B,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,sEAAI;QAAA,qEAAG;QAAA,gFAAoB;QAAA,4DAAI;QAAC,6IAAgF;QAAA,4DAAK;QAErH,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QACxB,sEAAI;QAAA,+EAAmB;QAAA,qEAAG;QAAA,yEAAa;QAAA,4DAAI;QAAC,qEAAQ;QAAA,4DAAK;QAEzD,sEAAI;QAAA,gFAAoB;QAAA,4DAAK;QAC7B,sEAAI;QAAA,iEAAK;QAAA,qEAAG;QAAA,6EAAiB;QAAA,4DAAI;QAAC,yGAA4C;QAAA,4DAAK;QAEnF,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,sEAAI;QAAA,qEAAG;QAAA,kEAAM;QAAA,4DAAI;QAAC,8IAAiF;QAAA,4DAAK;QACxG,sEAAI;QAAA,qEAAG;QAAA,gEAAI;QAAA,4DAAI;QAAC,wHAA2D;QAAA,4DAAK;QAEhF,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,0KAA8G;QAAA,4DAAK;QAC3H,4DAAK;QACL,iEACA;QAAA,yEAA6C;QAAA,qEAAG;QAAA,yEAAa;QAAA,4DAAI;QAAA,4DAAK;QACtE,iEACA;QAAA,yEACI;QAAA,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,sEAAI;QAAA,qGAAyC;QAAA,4DAAK;QACtD,4DAAK;QACT,4DAAM;QACV,4DAAM;;6FD9CO,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAoD;;AAK7C,MAAM,kBAAkB;IAE7B,SAAS,CAAC,SAAqB,EAAE,gBAAwB;QACvD,IAAG,CAAC,SAAS,IAAI,CAAC,gBAAgB,EAAC;YACjC,OAAO,SAAS,CAAC;SAClB;QAED,OAAO,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5L,CAAC;;oFARU,kBAAkB;sHAAlB,kBAAkB;6FAAlB,kBAAkB;cAH9B,kDAAI;eAAC;gBACJ,IAAI,EAAE,gBAAgB;aACvB;;;;;;;;;;;;;;ACJD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,6DAA6D;IAC7D,kBAAkB,EAAE,qDAAqD;CAE1E,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AClBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'health-catalyst-demo';\n\n}\n","<app-header></app-header> \n<div class=\"container\">\n  <router-outlet></router-outlet>\n  <!-- <app-employee-search *ngIf=\"menuSelected==='employeeSearch'\"></app-employee-search>\n  <app-employee-info *ngIf=\"menuSelected==='newEmployee'\"></app-employee-info> -->\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { EmployeeSearchComponent } from './employee-search/employee-search.component';\nimport { EmployeeListComponent } from './employee-search/employee-list/employee-list.component';\nimport { EmployeeFilterPipe } from './pipe/employee-filter.pipe';\nimport { EmployeeInfoComponent } from './employee-info/employee-info.component';\nimport { HomeComponent } from './home/home.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n \n\nconst appRoutes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'employeeSearch', component: EmployeeSearchComponent},\n  {path: 'employeeInfo', component: EmployeeInfoComponent},\n  {path: 'employeeInfo/:id', component: EmployeeInfoComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    EmployeeSearchComponent,\n    EmployeeListComponent,\n    EmployeeFilterPipe,\n    EmployeeInfoComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule, \n    FormsModule, \n    HttpClientModule, \n    RouterModule.forRoot(appRoutes),\n    BrowserAnimationsModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [],\n  // providers: [{provide: HTTP_INTERCEPTORS, useClass: CorsInterceptorService, multi: true}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild, ɵConsole } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Employee } from '../employee.model';\nimport { EmployeeService } from '../employee.service';\nimport { NgForm } from '@angular/forms';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-employee-info',\n  templateUrl: './employee-info.component.html',\n  styleUrls: ['./employee-info.component.css']\n})\nexport class EmployeeInfoComponent implements OnInit {\n  // @ViewChild(\"empForm\") employeeForm : NgForm;\n  @ViewChild('empForm', {static: true}) employeeForm: NgForm;\n  employePicturePath : File;\n  employee : Employee =\n  {\n      AddressLine1 : '',\n      AddressLine2 : '',\n      Age : 0,\n      City : '',\n      FirstName : '',\n      Interests : '',\n      LastName : '',\n      State : '',\n      Zipcode : '',\n      Id: 0,\n      PicturePath: ''\n    };\n  id: number;\n  constructor(private employeeService: EmployeeService, private route: ActivatedRoute, private router : Router,  private toastr: ToastrService) { }\n\n  ngOnInit() {\n    console.log(\"test\");\n    console.log(this.employeeForm);\n    console.log(\"test\");\n    this.id = this.route.snapshot.params['id'];\n    console.log(this.route.snapshot.params);\n    \n    if(this.id != null){\n      this.employeeService.GetEmployee(this.id)\n      .subscribe(\n          response => {\n            console.log(response); \n            this.employee = response; \n            this.employeeForm.setValue({\n              AddressLine1: this.employee.AddressLine1,\n              AddressLine2: this.employee.AddressLine2,\n              Age: this.employee.Age,\n              City: this.employee.City,\n              FirstName: this.employee.FirstName,\n              Interests: this.employee.Interests,\n              LastName: this.employee.LastName,\n              State: this.employee.State,\n              Zipcode: this.employee.Zipcode,\n              Id: this.employee.Id,\n              PicturePath: this.employee.PicturePath\n            });\n          }\n      );\n      console.log(this.employee);\n    }\n  }\n\n  onFileSelected(event){\n    console.log(\"inside file selected\");\n    console.log(event);\n    this.employePicturePath = event.target.files[0];\n    console.log(this.employePicturePath);\n\n    if(this.employePicturePath){\n      const reader = new FileReader();\n      reader.onload = this.handleReaderLoaded.bind(this);\n      reader.readAsBinaryString(this.employePicturePath );\n      this.toastr.success(\"The employee picture imported successfully\");\n    }\n  }\n\n  handleReaderLoaded(e) {\n    this.employee.PicturePath = 'data:image/png;base64,' + btoa(e.target.result);\n  }\n\n  OnSubmitForm(form: NgForm){\n    console.log(\"on submit\");\n    console.log(this.employee);\n    console.log(this.employeeForm);\n\n    this.employee = {\n      AddressLine1 : this.employeeForm.value.AddressLine1,\n      AddressLine2 : this.employeeForm.value.AddressLine2,\n      Age : this.employeeForm.value.Age,\n      City : this.employeeForm.value.City,\n      FirstName : this.employeeForm.value.FirstName,\n      Interests : this.employeeForm.value.Interests,\n      LastName : this.employeeForm.value.LastName,\n      State : this.employeeForm.value.State,\n      Zipcode : this.employeeForm.value.Zipcode,\n      Id:  this.employeeForm.value.Id,\n      PicturePath: this.employee.PicturePath\n    };\n    console.log(this.employee.Id);\n    if(this.employee.Id !== 0){\n      this.employeeService.UpdateEmployee(this.employee);\n      this.toastr.success(\"The changes are updated successfully\");\n    }\n    else{\n      this.employeeService.CreateEmployee(this.employee);\n      this.toastr.success(\"The new employee record created successfully\");\n    }\n    \n    this.router.navigate(['/employeeSearch']).then(() => {\n      window.location.reload();\n    });\n\n    console.log(form);\n  }\n}\n","<div class=\"panel panel-primary\">\n    <div class=\"panel-heading\">\n        <h3 class=\"panel-title\">Employee Info</h3>\n    </div>\n    <div class=\"panel-body\">\n        <form (ngSubmit)=\"OnSubmitForm(empForm)\" ngForm #empForm=\"ngForm\" >\n            <input type=\"hidden\" class=\"form-control\" id=\"inputId\" name=\"Id\" value=\"0\" [(ngModel)] =\"employee.Id\">\n            <input type=\"hidden\" class=\"form-control\" id=\"inputPicture\" name=\"PicturePath\" [(ngModel)] =\"employee.PicturePath\">\n            <input style=\"display:none;\" type=\"file\" accept=\".gif,.jpg,.jpeg,.png\" (change)=\"onFileSelected($event)\" #fileInput>\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-xs-2\">\n                        <img style=\"height: 200px; width: 200px;\" name=\"picture\" \n                            src=\"{{employee.PicturePath}}\"\n                            (click)=\"fileInput.click()\"\n                            >\n                        \n                        <div class=\"form-group\">\n                            <p class=\"help-block\" style=\"font-size: x-small;text-align: center;\" >Click on the image to change</p>\n                        </div>\n                    </div>\n                    <div class=\"col-xs-9\">\n                        <br>\n                        <div class=\"row\">\n                            <div class=\"col-xs-6\">\n                                <label for=\"inputFirstName\" class=\"col-sm-4 control-label\">First Name *</label>\n                                <div class=\"col-sm-8\">\n                                  <input type=\"text\" required tabindex=\"1\" class=\"form-control\" id=\"inputFirstName\" name=\"FirstName\" ngModel #FirstName=\"ngModel\">\n                                  <span class=\"help-block\" *ngIf=\"!FirstName.valid && FirstName.touched\">Invalid first name</span>\n                                </div>\n                            </div>\n                            <div class=\"col-xs-6\">\n                                <label for=\"inputAddress1\" class=\"col-sm-4 control-label\">Address 1 *</label>\n                                <div class=\"col-sm-8\">\n                                    <input type=\"text\" required tabindex=\"5\" class=\"form-control\" id=\"inputAddress1\" name=\"AddressLine1\" ngModel #AddressLine1=\"ngModel\" >\n                                    <span class=\"help-block\" *ngIf=\"!AddressLine1.valid && AddressLine1.touched\">Invalid address line 1</span>\n                                </div>\n                            </div>\n                        </div>\n                        <br/>\n                        <div class=\"row\">\n                            <div class=\"col-xs-6\">\n                                <label for=\"inputLastName\" class=\"col-sm-4 control-label\">Last Name *</label>\n                                <div class=\"col-sm-8\">\n                                  <input type=\"text\" required class=\"form-control\" tabindex=\"2\" id=\"inputLastName\" name=\"LastName\"  ngModel #LastName=\"ngModel\" >\n                                  <span class=\"help-block\" *ngIf=\"!LastName.valid && LastName.touched\">Invalid last name</span>\n                                </div>\n                            </div>\n                            <div class=\"col-xs-6\">\n                                <label for=\"inputAddress2\" class=\"col-sm-4 control-label\">Address 2</label>\n                                <div class=\"col-sm-8\">\n                                    <input type=\"text\" tabindex=\"6\" class=\"form-control\" id=\"inputAddress2\" name=\"AddressLine2\" ngModel >\n                                </div>\n                            </div>\n                        </div><br/>\n                        <div class=\"row\">\n                            <div class=\"col-xs-6\">\n                                <label for=\"inputAge\"class=\"col-sm-4 control-label\">Age *</label>\n                                <div class=\"col-sm-3\">\n                                  <input type=\"number\" min=\"18\" max=\"99\" required tabindex=\"3\" class=\"form-control\" id=\"inputAge\" name=\"Age\" ngModel #Age=\"ngModel\">\n                                  <span class=\"help-block\" *ngIf=\"!Age.valid && Age.touched\">Invalid age</span>\n                                </div>\n                            </div>\n                            <div class=\"col-xs-6\">\n                                <label for=\"inputCity\" class=\"col-sm-4 control-label\">City *</label>\n                                <div class=\"col-sm-6\">\n                                    <input type=\"text\" required tabindex=\"7\" class=\"form-control\" id=\"inputCity\" name=\"City\" ngModel #City=\"ngModel\">\n                                    <span class=\"help-block\" *ngIf=\"!City.valid && City.touched\">Invalid City</span>\n                                </div>\n                            </div>\n                        </div><br/>\n                        <div class=\"row\">\n                            <div class=\"col-xs-6\">\n                                <label for=\"inputInterests\" class=\"col-sm-4 control-label\">Interests</label>\n                                <div class=\"col-sm-8\">\n                                    <textarea class=\"form-control\" tabindex=\"4\" rows=\"4\" id=\"inputInterests\" name=\"Interests\" ngModel></textarea>\n                                </div>\n                            </div>\n        \n                            <div class=\"col-xs-6\">\n                                <div class=\"row\">\n                                    <div class=\"col-xs-12\">\n                                        <label for=\"inputState\" class=\"col-sm-4 control-label\">State *</label>\n                                        <div class=\"col-sm-3\">\n                                        <input type=\"text\" required class=\"form-control\" tabindex=\"8\" id=\"inputState\" name=\"State\"  ngModel #State=\"ngModel\">\n                                        <span class=\"help-block\" *ngIf=\"!State.valid && State.touched\">Invalid state</span>\n                                    </div>\n                                </div>\n                            </div>\n                                <br>\n                                <div class=\"row\">\n                                    <div class=\"col-xs-12\">\n                                        <label for=\"inputZip\" required class=\"col-sm-4 control-label\">Zipcode *</label>\n                                        <div class=\"col-sm-5\">\n                                        <input type=\"text\" required class=\"form-control\" tabindex=\"9\" id=\"inputZip\" name=\"Zipcode\" ngModel #Zipcode=\"ngModel\">\n                                        <span class=\"help-block\" *ngIf=\"!Zipcode.valid && Zipcode.touched\">Invalid Zipcode</span>\n                                        </div>\n                                    </div>    \n                                </div>\n                            </div>\n                        </div><br/>\n                        <div class=\"row\">\n                            <div class=\"col-xs-6\"></div>\n                            <div class=\"col-xs-6\">\n                                <div class=\"col-xs-4\"></div>\n                                <div class=\"col-sm-8\">\n                                    <button type=\"button\" tabindex=\"11\" class=\"col-sm-5 btn btn-info\" routerLink=\"/employeeSearch\">Cancel</button>\n                                    <div class=\"col-sm-2\">&nbsp;&nbsp;&nbsp;</div>\n                                    <button type=\"submit\" tabindex=\"10\" class=\"col-sm-5 btn btn-primary\" [disabled]=\"!empForm.valid\" >Save</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>      \n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Employee } from '../../employee.model';\nimport { EmployeeService } from '../../employee.service';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { identifierModuleUrl } from '@angular/compiler';\nimport { Toast, ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n  @Input() employeeToSearch: string;\n  @Input() sortBy: Subject<string>;\n  employees: Employee[];\n\n  constructor(private employeeService: EmployeeService, private router: Router, private toastr: ToastrService) { }\n  \n  ngOnInit(){\n    this.loadEmployeeList();\n  }\n\n  loadEmployeeList(){\n    this.employeeService.GetAllEmployees()\n    .subscribe(\n        response => {console.log(response); this.employees = response; }\n    );\n    this.sortEmployeeList();\n  }\n\n  OnClick(Id: number){\n    console.log(Id);\n    this.router.navigate(['/employeeInfo', Id.toString() ]);\n  }\n\n  OnDelete(Id: number){\n    console.log(Id);\n    if(confirm(\"Are you sure to delete the employee ?\"))\n    {\n      this.employeeService.DeleteEmployee(Id).subscribe(\n        response => \n        {\n          console. log(response); \n          this.loadEmployeeList();\n        }\n      );\n\n      this.toastr.success(\"The employee deleted successfuly.\");\n    }\n  }\n\n  sortEmployeeList(){\n    \n    this.sortBy.subscribe(v => { \n      if (this.employees.length > 0) {\n        if(v.toLowerCase() === \"name\"){\n          this.employees = this.employees.sort((a,b) => (a.LastName > b.LastName) ? 1: -1  );\n        }\n        else if(v.toLowerCase() === \"age\"){\n          this.employees = this.employees.sort((a,b) => (a.Age > b.Age) ? 1: -1  );\n        }\n        else if(v.toLowerCase() === \"city\"){\n          this.employees = this.employees.sort((a,b) => (a.City > b.City) ? 1: -1  );\n        }\n        else if(v.toLowerCase() === \"state\"){\n          this.employees = this.employees.sort((a,b) => (a.State > b.State) ? 1: -1  );\n        }\n        else{\n          // do nothing\n        }\n      }\n     });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row my-row\" *ngFor=\"let employee of employees|employeeFilter:employeeToSearch\">\n      <div class=\"col-lg-12\">\n        <div class=\"col-lg-1\">\n          <div class=\"row my-picture-row\" >\n            <img class=\"my-picture\" src=\"{{employee.PicturePath}}\"  (click)=\"OnClick(employee.Id)\"/>\n          </div>\n        </div>  \n        <div class=\"col-lg-4\">\n          <div class=\"row my-child-row\" >\n            <div class=\"col-lg-2 my-title\">Name</div>\n            <div class=\"col-lg-8\">{{employee.LastName}}, {{employee.FirstName}}</div>\n          </div>\n          <div class=\"row my-child-row\" >\n            <div class=\"col-lg-2 my-title\">Age: </div>\n            <div class=\"col-lg-8\">{{employee.Age}} </div>\n          </div>\n          <div class=\"row my-child-row\" >\n            <div class=\"col-lg-2 my-title\">Interest: </div>\n            <div class=\"col-lg-8\">{{employee.Interests}}</div>\n          </div>\n          \n        </div>  \n        <div class=\"col-lg-5\">\n          <div class=\"row my-child-row\">\n            <div class=\"col-lg-2 my-title\">Address1: </div>\n            <div class=\"col-lg-4\">{{employee.AddressLine1}}</div>\n            <div class=\"col-lg-1 my-title\">State: </div>\n            <div class=\"col-lg-3\">{{employee.State}}</div>\n          </div>\n          \n          <div class=\"row my-child-row\">\n            <div class=\"col-lg-2 my-title\">Address2: </div>\n            <div class=\"col-lg-4\">{{employee.AddressLine2}}</div>\n            <div class=\"col-lg-1 my-title\">Zip: </div>\n            <div class=\"col-lg-3\">{{employee.Zipcode}}</div>\n          </div>\n          <div class=\"row my-child-row\">\n            <div class=\"col-lg-2 my-title\">City: </div>\n            <div class=\"col-lg-4\">{{employee.City}}</div>\n          </div>\n  \n        </div>  \n\n        <div class=\"col-lg-2\">\n            <div class=\"row\"  style=\"vertical-align:middle; height: 100px;\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"OnClick(employee.Id)\">Edit</button>\n                &nbsp;&nbsp;&nbsp;\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"OnDelete(employee.Id)\">Delete</button>\n            </div>\n        </div>  \n        \n      </div>  \n\n    </div>  \n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-employee-search',\n  templateUrl: './employee-search.component.html',\n  styleUrls: ['./employee-search.component.css']\n})\nexport class EmployeeSearchComponent implements OnInit {\n  employeeToSearch: string;\n  sortBy: Subject<string> = new Subject();\n  constructor() { }\n\n  ngOnInit(){\n  }\n  selectChangeHandler(event: any){\n    this.sortBy.next(event.target.value);\n  }\n}\n","<div class=\"panel panel-primary\">\n    <div class=\"panel-heading\">\n        <h3 class=\"panel-title\">Employee Search</h3>\n    </div>\n    <div class=\"panel-body\">\n        <form class=\"form-inline\">\n            <div class=\"form-group\">\n                <label for=\"searchName\">Search By Name</label> &nbsp;&nbsp;&nbsp;\n                <input type=\"text\" class=\"form-control\" id=\"searchName\" name=\"employeeName\"  [(ngModel)]=\"employeeToSearch\">\n            </div>\n        </form>\n    </div>\n</div>\n<br/>\n\n<div class=\"panel panel-info\">\n    <div class=\"panel-heading\">\n        <form class=\"form-inline text-right\">\n            <div class=\"form-group\">\n                <label for=\"searchName\">Sort By</label> &nbsp;&nbsp;&nbsp;\n                <select class=\"form-control\" id=\"searchOption\" (change)=\"selectChangeHandler($event)\">\n                    <option></option>\n                    <option>Name</option>\n                    <option>Age</option>\n                    <option>State</option>\n                    <option>City</option>\n                </select>\n            </div>\n        </form>\n    </div>\n    <div class=\"panel-body\">\n        <app-employee-list [employeeToSearch]=\"employeeToSearch\" [sortBy]=\"sortBy\"></app-employee-list>\n    </div>\n</div>\n","import { Injectable, ɵConsole } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Employee } from './employee.model';\r\nimport { environment } from '../environments/environment';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class EmployeeService{\r\n    serviceUrl : string = environment.serviceApiEndPoint ;\r\n    \r\n    employees: Employee[];\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    GetAllEmployees(){\r\n        return this.http.get<Employee[]>(this.serviceUrl);\r\n    }\r\n\r\n    GetEmployee(id: number){\r\n        return this.http.get<Employee>\r\n        (\r\n            this.serviceUrl + \"/\" + id.toString()\r\n        );\r\n    }\r\n    \r\n    CreateEmployee(employee: Employee){\r\n        console.log(employee);\r\n        console.log(this.serviceUrl);\r\n        this.http.post(\r\n            this.serviceUrl, \r\n            employee\r\n        )\r\n        .subscribe(\r\n            response => {console.log(response); }\r\n        );\r\n    }\r\n\r\n    UpdateEmployee(employee: Employee){\r\n        console.log(this.serviceUrl);\r\n        console.log(employee);\r\n        this.http.put(\r\n            this.serviceUrl, \r\n            employee\r\n        )\r\n        .subscribe(\r\n            response => {console.log(response); }\r\n        );\r\n    }\r\n\r\n    DeleteEmployee(id: number){\r\n        return this.http.delete(this.serviceUrl + \"/\" + id.toString());\r\n    }\r\n}","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<nav class=\"navbar navbar-light bg-dark\">\n    <div class=\"container-fluid\">\n        <div class=\"navbar-header\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n            <a class=\"navbar-brand\" routerLink=\"/\">Health Catalyst Demo</a>\n        </div>\n\n        <div class=\"collapse navbar-collapse\">\n            <ul class=\"nav navbar-nav\">\n                <li routerLinkActive=\"active\"><a routerLink=\"/employeeSearch\" >Employee Search</a></li>\n                <li routerLinkActive=\"active\"><a routerLink=\"/employeeInfo\">New Employee</a></li>\n            </ul>   \n        </div>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"panel panel-primary\">\n    <div class=\"panel-heading\">\n        <h3 class=\"panel-title\">Welcome to HC demo</h3>\n    </div>\n    <div class=\"panel-body\">\n        <h4>Below are some of the list of high level concepts used in this demo app.</h4>\n        <br>\n        <h4 style=\"color:maroon; font-weight: bold;\"><u>Technologies</u></h4>\n        <br>\n        <dl class=\"dl-horizontal\" style=\"width: fit-content;\">\n            <dt>Front End</dt>\n            <dd>Angular 10</dd>\n            \n            <dt>Web API</dt>\n            <dd>.NET Core 3 & Entity Framework - Code first approach</dd>\n\n            <dt>Backend</dt>\n            <dd>SQL Lite - self contained database</dd>\n\n            <dt>Other components</dt>\n            <dd>Bootstrap, Toastr </dd>\n        </dl>\n        <br>\n        <h4 style=\"color:maroon; font-weight: bold;\"><u>Concepts</u></h4>\n        <br>\n        <dl class=\"dl-horizontal\" style=\"width: fit-content;\">\n            <dt>UI Styling</dt>\n            <dd>Bootstrap <b>v3</b></dd>\n\n            <dt>Angular Forms</dt>\n            <dd><b>Template driven form</b> is used for Employee Info form (Adding new employee & editing exisitng employee)</dd>\n            \n            <dt>Page Navigation</dt>\n            <dd>Angular Routes and <b>RouterModules</b> are used</dd>\n\n            <dt>Server Communication</dt>\n            <dd>Used <b>HttpClientModules</b> to communicate to WebAPI for CRUD operations</dd>\n\n            <dt>Search & Sort</dt>\n            <dd><b>@Input</b> is used to pass params from Employee-search component to employee-list component.</dd>\n            <dd><b>Pipe</b> has been used to filter the employee list by search input. </dd>\n\n            <dt>Others</dt>\n            <dd>String interpolation, two-way bindings, form validations, observables (mainly in service class), Enabling CORS</dd>\n        </dl>\n        <br>\n        <h4 style=\"color:maroon; font-weight: bold;\"><u>Pending Items</u></h4>\n        <br>\n        <dl class=\"dl-horizontal\" style=\"width: fit-content;\">\n            <dt>Login Form</dt>\n            <dd>Implement Java Web Token with local store</dd>\n        </dl>   \n    </div>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\nimport {Employee} from 'src/app/employee.model';\n@Pipe({\n  name: 'employeeFilter'\n})\nexport class EmployeeFilterPipe implements PipeTransform {\n\n  transform(employees: Employee[], employeeToSearch: string) {\n    if(!employees || !employeeToSearch){\n      return employees;\n    }\n\n    return employees.filter(emp => (emp.FirstName.toLowerCase().indexOf(employeeToSearch.toLowerCase()) !== -1 || emp.LastName.toLowerCase().indexOf(employeeToSearch.toLowerCase()) !== -1)); \n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // serviceApiEndPoint: \"https://localhost:44314/api/employee\"\n  serviceApiEndPoint: \"https://hcwebapidemo.azurewebsites.net/api/employee\"\n  \n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}